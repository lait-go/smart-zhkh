{
   "realm":"smart-hcs",
   "enabled":true,
   "eventsEnabled":true,
   "eventsExpiration":259200,
   "eventsListeners":[
      "jboss-logging"
   ],
   "enabledEventTypes":[
      "SEND_RESET_PASSWORD",
      "UPDATE_CONSENT_ERROR",
      "GRANT_CONSENT",
      "VERIFY_PROFILE_ERROR",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "UPDATE_TOTP",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
      "RESTART_AUTHENTICATION",
      "IMPERSONATE",
      "UPDATE_PROFILE_ERROR",
      "LOGIN",
      "OAUTH2_DEVICE_VERIFY_USER_CODE",
      "UPDATE_PASSWORD_ERROR",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "OAUTH2_EXTENSION_GRANT",
      "USER_DISABLED_BY_PERMANENT_LOCKOUT",
      "TOKEN_EXCHANGE",
      "AUTHREQID_TO_TOKEN",
      "LOGOUT",
      "REGISTER",
      "DELETE_ACCOUNT_ERROR",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "USER_DISABLED_BY_TEMPORARY_LOCKOUT",
      "DELETE_ACCOUNT",
      "UPDATE_PASSWORD",
      "CLIENT_DELETE",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "CLIENT_DELETE_ERROR",
      "VERIFY_EMAIL",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "EXECUTE_ACTIONS",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "OAUTH2_EXTENSION_GRANT_ERROR",
      "SEND_VERIFY_EMAIL",
      "OAUTH2_DEVICE_AUTH",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "OAUTH2_DEVICE_CODE_TO_TOKEN",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
      "UPDATE_EMAIL",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "CLIENT_UPDATE_ERROR",
      "AUTHREQID_TO_TOKEN_ERROR",
      "UPDATE_PROFILE",
      "CLIENT_REGISTER_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "SEND_IDENTITY_PROVIDER_LINK",
      "SEND_VERIFY_EMAIL_ERROR",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "OAUTH2_DEVICE_AUTH_ERROR",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "VERIFY_PROFILE",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
   ],
   "adminEventsEnabled":true,
   "adminEventsDetailsEnabled":true,
   "users":[
      {
         "username":"esenin",
         "email":"esenin@smart-hcs.local",
         "firstName":"Сергей",
         "lastName":"Есенин",
         "enabled":true,
         "emailVerified":true,
         "groups":[
            "users"
         ],
         "credentials":[
            {
               "type":"password",
               "value":"userpass",
               "temporary":false
            }
         ]
      },
      {
         "username":"pushkin",
         "email":"pushkin@smart-hcs.local",
         "firstName":"Александр",
         "lastName":"Пушкин",
         "enabled":true,
         "emailVerified":true,
         "groups":[
            "users"
         ],
         "credentials":[
            {
               "type":"password",
               "value":"userpass",
               "temporary":false
            }
         ]
      }
   ],
   "groups":[
      {
         "name":"admins"
      },
      {
         "name":"users"
      }
   ],
   "clients":[
      {
         "clientId":"postman-client",
         "name":"Postman OAuth2 Client",
         "enabled":true,
         "protocol":"openid-connect",
         "publicClient":true,
         "redirectUris":[
            "https://oauth.pstmn.io/v1/callback"
         ],
         "baseUrl":"https://oauth.pstmn.io",
         "standardFlowEnabled":true,
         "implicitFlowEnabled":false,
         "directAccessGrantsEnabled":true,
         "serviceAccountsEnabled":false,
         "authorizationServicesEnabled":false,
         "webOrigins":[
            "+"
         ],
         "attributes":{
            "post.logout.redirect.uris":"+"
         },
         "protocolMappers":[
            {
               "name":"groups",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-group-membership-mapper",
               "consentRequired":false,
               "config":{
                  "access.token.claim":"true",
                  "id.token.claim":"true",
                  "userinfo.token.claim":"true",
                  "claim.name":"groups",
                  "full.path":"false"
               }
            }
         ]
      }
   ]
}